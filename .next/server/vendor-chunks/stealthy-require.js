"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stealthy-require";
exports.ids = ["vendor-chunks/stealthy-require"];
exports.modules = {

/***/ "(rsc)/./node_modules/stealthy-require/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/stealthy-require/lib/index.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\nvar isNative = /\\.node$/;\nfunction forEach(obj, callback) {\n    for(var key in obj){\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n            continue;\n        }\n        callback(key);\n    }\n}\nfunction assign(target, source) {\n    forEach(source, function(key) {\n        target[key] = source[key];\n    });\n    return target;\n}\nfunction clearCache(requireCache) {\n    forEach(requireCache, function(resolvedPath) {\n        if (!isNative.test(resolvedPath)) {\n            delete requireCache[resolvedPath];\n        }\n    });\n}\nmodule.exports = function(requireCache, callback, callbackForModulesToKeep, module1) {\n    var originalCache = assign({}, requireCache);\n    clearCache(requireCache);\n    if (callbackForModulesToKeep) {\n        var originalModuleChildren = module1.children ? module1.children.slice() : false; // Creates a shallow copy of module.children\n        callbackForModulesToKeep();\n        // Lists the cache entries made by callbackForModulesToKeep()\n        var modulesToKeep = [];\n        forEach(requireCache, function(key) {\n            modulesToKeep.push(key);\n        });\n        // Discards the modules required in callbackForModulesToKeep()\n        clearCache(requireCache);\n        if (module1.children) {\n            module1.children = originalModuleChildren; // Removes last references to modules required in callbackForModulesToKeep() -> No memory leak\n        }\n        // Takes the cache entries of the original cache in case the modules where required before\n        for(var i = 0; i < modulesToKeep.length; i += 1){\n            if (originalCache[modulesToKeep[i]]) {\n                requireCache[modulesToKeep[i]] = originalCache[modulesToKeep[i]];\n            }\n        }\n    }\n    var freshModule = callback();\n    var stealthCache = callbackForModulesToKeep ? assign({}, requireCache) : false;\n    clearCache(requireCache);\n    if (callbackForModulesToKeep) {\n        // In case modules to keep were required inside the stealthy require for the first time, copy them to the restored cache\n        for(var k = 0; k < modulesToKeep.length; k += 1){\n            if (stealthCache[modulesToKeep[k]]) {\n                requireCache[modulesToKeep[k]] = stealthCache[modulesToKeep[k]];\n            }\n        }\n    }\n    assign(requireCache, originalCache);\n    return freshModule;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc3RlYWx0aHktcmVxdWlyZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxXQUFXO0FBRWYsU0FBU0MsUUFBUUMsR0FBRyxFQUFFQyxRQUFRO0lBQzFCLElBQU0sSUFBSUMsT0FBT0YsSUFBTTtRQUNuQixJQUFJLENBQUNHLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLEtBQUtFLE1BQU07WUFDakQ7UUFDSjtRQUNBRCxTQUFTQztJQUNiO0FBQ0o7QUFFQSxTQUFTSyxPQUFPQyxNQUFNLEVBQUVDLE1BQU07SUFDMUJWLFFBQVFVLFFBQVEsU0FBVVAsR0FBRztRQUN6Qk0sTUFBTSxDQUFDTixJQUFJLEdBQUdPLE1BQU0sQ0FBQ1AsSUFBSTtJQUM3QjtJQUNBLE9BQU9NO0FBQ1g7QUFFQSxTQUFTRSxXQUFXQyxZQUFZO0lBQzVCWixRQUFRWSxjQUFjLFNBQVVDLFlBQVk7UUFDeEMsSUFBSSxDQUFDZCxTQUFTZSxJQUFJLENBQUNELGVBQWU7WUFDOUIsT0FBT0QsWUFBWSxDQUFDQyxhQUFhO1FBQ3JDO0lBQ0o7QUFDSjtBQUVBRSxPQUFPQyxPQUFPLEdBQUcsU0FBVUosWUFBWSxFQUFFVixRQUFRLEVBQUVlLHdCQUF3QixFQUFFRixPQUFNO0lBRS9FLElBQUlHLGdCQUFnQlYsT0FBTyxDQUFDLEdBQUdJO0lBQy9CRCxXQUFXQztJQUVYLElBQUlLLDBCQUEwQjtRQUUxQixJQUFJRSx5QkFBeUJKLFFBQU9LLFFBQVEsR0FBR0wsUUFBT0ssUUFBUSxDQUFDQyxLQUFLLEtBQUssT0FBTyw0Q0FBNEM7UUFFNUhKO1FBRUEsNkRBQTZEO1FBQzdELElBQUlLLGdCQUFnQixFQUFFO1FBQ3RCdEIsUUFBUVksY0FBYyxTQUFVVCxHQUFHO1lBQy9CbUIsY0FBY0MsSUFBSSxDQUFDcEI7UUFDdkI7UUFFQSw4REFBOEQ7UUFDOURRLFdBQVdDO1FBRVgsSUFBSUcsUUFBT0ssUUFBUSxFQUFFO1lBQ2pCTCxRQUFPSyxRQUFRLEdBQUdELHdCQUF3Qiw4RkFBOEY7UUFDNUk7UUFFQSwwRkFBMEY7UUFDMUYsSUFBTSxJQUFJSyxJQUFJLEdBQUdBLElBQUlGLGNBQWNHLE1BQU0sRUFBRUQsS0FBRyxFQUFJO1lBQzlDLElBQUlOLGFBQWEsQ0FBQ0ksYUFBYSxDQUFDRSxFQUFFLENBQUMsRUFBRTtnQkFDakNaLFlBQVksQ0FBQ1UsYUFBYSxDQUFDRSxFQUFFLENBQUMsR0FBR04sYUFBYSxDQUFDSSxhQUFhLENBQUNFLEVBQUUsQ0FBQztZQUNwRTtRQUNKO0lBRUo7SUFFQSxJQUFJRSxjQUFjeEI7SUFFbEIsSUFBSXlCLGVBQWVWLDJCQUEyQlQsT0FBTyxDQUFDLEdBQUdJLGdCQUFnQjtJQUV6RUQsV0FBV0M7SUFFWCxJQUFJSywwQkFBMEI7UUFDMUIsd0hBQXdIO1FBQ3hILElBQU0sSUFBSVcsSUFBSSxHQUFHQSxJQUFJTixjQUFjRyxNQUFNLEVBQUVHLEtBQUcsRUFBSTtZQUM5QyxJQUFJRCxZQUFZLENBQUNMLGFBQWEsQ0FBQ00sRUFBRSxDQUFDLEVBQUU7Z0JBQ2hDaEIsWUFBWSxDQUFDVSxhQUFhLENBQUNNLEVBQUUsQ0FBQyxHQUFHRCxZQUFZLENBQUNMLGFBQWEsQ0FBQ00sRUFBRSxDQUFDO1lBQ25FO1FBQ0o7SUFDSjtJQUVBcEIsT0FBT0ksY0FBY007SUFFckIsT0FBT1E7QUFFWCIsInNvdXJjZXMiOlsid2VicGFjazovL2lhdG9vbHMtbmV4dC8uL25vZGVfbW9kdWxlcy9zdGVhbHRoeS1yZXF1aXJlL2xpYi9pbmRleC5qcz80ZjU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGlzTmF0aXZlID0gL1xcLm5vZGUkLztcblxuZnVuY3Rpb24gZm9yRWFjaChvYmosIGNhbGxiYWNrKSB7XG4gICAgZm9yICggdmFyIGtleSBpbiBvYmogKSB7XG4gICAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY2FsbGJhY2soa2V5KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkge1xuICAgIGZvckVhY2goc291cmNlLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfSk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gY2xlYXJDYWNoZShyZXF1aXJlQ2FjaGUpIHtcbiAgICBmb3JFYWNoKHJlcXVpcmVDYWNoZSwgZnVuY3Rpb24gKHJlc29sdmVkUGF0aCkge1xuICAgICAgICBpZiAoIWlzTmF0aXZlLnRlc3QocmVzb2x2ZWRQYXRoKSkge1xuICAgICAgICAgICAgZGVsZXRlIHJlcXVpcmVDYWNoZVtyZXNvbHZlZFBhdGhdO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcXVpcmVDYWNoZSwgY2FsbGJhY2ssIGNhbGxiYWNrRm9yTW9kdWxlc1RvS2VlcCwgbW9kdWxlKSB7XG5cbiAgICB2YXIgb3JpZ2luYWxDYWNoZSA9IGFzc2lnbih7fSwgcmVxdWlyZUNhY2hlKTtcbiAgICBjbGVhckNhY2hlKHJlcXVpcmVDYWNoZSk7XG5cbiAgICBpZiAoY2FsbGJhY2tGb3JNb2R1bGVzVG9LZWVwKSB7XG5cbiAgICAgICAgdmFyIG9yaWdpbmFsTW9kdWxlQ2hpbGRyZW4gPSBtb2R1bGUuY2hpbGRyZW4gPyBtb2R1bGUuY2hpbGRyZW4uc2xpY2UoKSA6IGZhbHNlOyAvLyBDcmVhdGVzIGEgc2hhbGxvdyBjb3B5IG9mIG1vZHVsZS5jaGlsZHJlblxuXG4gICAgICAgIGNhbGxiYWNrRm9yTW9kdWxlc1RvS2VlcCgpO1xuXG4gICAgICAgIC8vIExpc3RzIHRoZSBjYWNoZSBlbnRyaWVzIG1hZGUgYnkgY2FsbGJhY2tGb3JNb2R1bGVzVG9LZWVwKClcbiAgICAgICAgdmFyIG1vZHVsZXNUb0tlZXAgPSBbXTtcbiAgICAgICAgZm9yRWFjaChyZXF1aXJlQ2FjaGUsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIG1vZHVsZXNUb0tlZXAucHVzaChrZXkpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBEaXNjYXJkcyB0aGUgbW9kdWxlcyByZXF1aXJlZCBpbiBjYWxsYmFja0Zvck1vZHVsZXNUb0tlZXAoKVxuICAgICAgICBjbGVhckNhY2hlKHJlcXVpcmVDYWNoZSk7XG5cbiAgICAgICAgaWYgKG1vZHVsZS5jaGlsZHJlbikgeyAvLyBPbmx5IHRydWUgZm9yIG5vZGUuanNcbiAgICAgICAgICAgIG1vZHVsZS5jaGlsZHJlbiA9IG9yaWdpbmFsTW9kdWxlQ2hpbGRyZW47IC8vIFJlbW92ZXMgbGFzdCByZWZlcmVuY2VzIHRvIG1vZHVsZXMgcmVxdWlyZWQgaW4gY2FsbGJhY2tGb3JNb2R1bGVzVG9LZWVwKCkgLT4gTm8gbWVtb3J5IGxlYWtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRha2VzIHRoZSBjYWNoZSBlbnRyaWVzIG9mIHRoZSBvcmlnaW5hbCBjYWNoZSBpbiBjYXNlIHRoZSBtb2R1bGVzIHdoZXJlIHJlcXVpcmVkIGJlZm9yZVxuICAgICAgICBmb3IgKCB2YXIgaSA9IDA7IGkgPCBtb2R1bGVzVG9LZWVwLmxlbmd0aDsgaSs9MSApIHtcbiAgICAgICAgICAgIGlmIChvcmlnaW5hbENhY2hlW21vZHVsZXNUb0tlZXBbaV1dKSB7XG4gICAgICAgICAgICAgICAgcmVxdWlyZUNhY2hlW21vZHVsZXNUb0tlZXBbaV1dID0gb3JpZ2luYWxDYWNoZVttb2R1bGVzVG9LZWVwW2ldXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgdmFyIGZyZXNoTW9kdWxlID0gY2FsbGJhY2soKTtcblxuICAgIHZhciBzdGVhbHRoQ2FjaGUgPSBjYWxsYmFja0Zvck1vZHVsZXNUb0tlZXAgPyBhc3NpZ24oe30sIHJlcXVpcmVDYWNoZSkgOiBmYWxzZTtcblxuICAgIGNsZWFyQ2FjaGUocmVxdWlyZUNhY2hlKTtcblxuICAgIGlmIChjYWxsYmFja0Zvck1vZHVsZXNUb0tlZXApIHtcbiAgICAgICAgLy8gSW4gY2FzZSBtb2R1bGVzIHRvIGtlZXAgd2VyZSByZXF1aXJlZCBpbnNpZGUgdGhlIHN0ZWFsdGh5IHJlcXVpcmUgZm9yIHRoZSBmaXJzdCB0aW1lLCBjb3B5IHRoZW0gdG8gdGhlIHJlc3RvcmVkIGNhY2hlXG4gICAgICAgIGZvciAoIHZhciBrID0gMDsgayA8IG1vZHVsZXNUb0tlZXAubGVuZ3RoOyBrKz0xICkge1xuICAgICAgICAgICAgaWYgKHN0ZWFsdGhDYWNoZVttb2R1bGVzVG9LZWVwW2tdXSkge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVDYWNoZVttb2R1bGVzVG9LZWVwW2tdXSA9IHN0ZWFsdGhDYWNoZVttb2R1bGVzVG9LZWVwW2tdXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzc2lnbihyZXF1aXJlQ2FjaGUsIG9yaWdpbmFsQ2FjaGUpO1xuXG4gICAgcmV0dXJuIGZyZXNoTW9kdWxlO1xuXG59O1xuIl0sIm5hbWVzIjpbImlzTmF0aXZlIiwiZm9yRWFjaCIsIm9iaiIsImNhbGxiYWNrIiwia2V5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXNzaWduIiwidGFyZ2V0Iiwic291cmNlIiwiY2xlYXJDYWNoZSIsInJlcXVpcmVDYWNoZSIsInJlc29sdmVkUGF0aCIsInRlc3QiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2FsbGJhY2tGb3JNb2R1bGVzVG9LZWVwIiwib3JpZ2luYWxDYWNoZSIsIm9yaWdpbmFsTW9kdWxlQ2hpbGRyZW4iLCJjaGlsZHJlbiIsInNsaWNlIiwibW9kdWxlc1RvS2VlcCIsInB1c2giLCJpIiwibGVuZ3RoIiwiZnJlc2hNb2R1bGUiLCJzdGVhbHRoQ2FjaGUiLCJrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/stealthy-require/lib/index.js\n");

/***/ })

};
;